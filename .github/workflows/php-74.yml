name: "PHP 7.4 images"

on:
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/php-74.yml"
      - "drupal/php/7.4/**"
      - "magento2/php/7.4/**"
      - "orocommerce/php/7.4/**"
      - "sylius/php/7.4/**"
      - "symfony/php/7.4/**"
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:

env:
  # Latest version of the Blackfire PHP probe
  BLACKFIRE_PROBE_VERSION: "1.49.1"

jobs:
  php_drupal_74:
    name: "Drupal - Default"
    runs-on: ubuntu-latest
    needs: php_symfony_74

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./drupal/php/7.4/
          file: ./drupal/php/7.4/Dockerfile
          tags: ajardin/drupal-php:7.4
          push: ${{ github.ref == 'refs/heads/master' }}

  php_drupal_74_blackfire:
    name: "Drupal - Blackfire"
    runs-on: ubuntu-latest
    needs: php_symfony_74_blackfire

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./drupal/php/7.4/blackfire/
          file: ./drupal/php/7.4/blackfire/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/drupal-php:7.4-blackfire
          push: ${{ github.ref == 'refs/heads/master' }}

  php_drupal_74_xdebug:
    name: "Drupal - Xdebug"
    runs-on: ubuntu-latest
    needs: php_symfony_74_xdebug

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./drupal/php/7.4/xdebug/
          file: ./drupal/php/7.4/xdebug/Dockerfile
          tags: ajardin/drupal-php:7.4-xdebug
          push: ${{ github.ref == 'refs/heads/master' }}

  php_magento_74:
    name: "Magento - Default"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./magento2/php/7.4/
          file: ./magento2/php/7.4/Dockerfile
          tags: ajardin/magento2-php:7.4
          push: ${{ github.ref == 'refs/heads/master' }}

  php_magento_74_blackfire:
    name: "Magento - Blackfire"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./magento2/php/7.4/blackfire/
          file: ./magento2/php/7.4/blackfire/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/magento2-php:7.4-blackfire
          push: ${{ github.ref == 'refs/heads/master' }}

  php_magento_74_xdebug:
    name: "Magento - Xdebug"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./magento2/php/7.4/xdebug/
          file: ./magento2/php/7.4/xdebug/Dockerfile
          tags: ajardin/magento2-php:7.4-xdebug
          push: ${{ github.ref == 'refs/heads/master' }}

  php_orocommerce_74:
    name: "OroCommerce - Default"
    runs-on: ubuntu-latest
    needs: php_symfony_74

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./orocommerce/php/7.4/
          file: ./orocommerce/php/7.4/Dockerfile
          tags: ajardin/orocommerce-php:7.4
          push: ${{ github.ref == 'refs/heads/master' }}

  php_orocommerce_74_blackfire:
    name: "OroCommerce - Blackfire"
    runs-on: ubuntu-latest
    needs: php_symfony_74_blackfire

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./orocommerce/php/7.4/blackfire/
          file: ./orocommerce/php/7.4/blackfire/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/orocommerce-php:7.4-blackfire
          push: ${{ github.ref == 'refs/heads/master' }}

  php_orocommerce_74_xdebug:
    name: "OroCommerce - Xdebug"
    runs-on: ubuntu-latest
    needs: php_symfony_74_xdebug

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./orocommerce/php/7.4/xdebug/
          file: ./orocommerce/php/7.4/xdebug/Dockerfile
          tags: ajardin/orocommerce-php:7.4-xdebug
          push: ${{ github.ref == 'refs/heads/master' }}

  php_sylius_74:
    name: "Sylius - Default"
    runs-on: ubuntu-latest
    needs: php_symfony_74

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./sylius/php/7.4/
          file: ./sylius/php/7.4/Dockerfile
          tags: ajardin/sylius-php:7.4
          push: ${{ github.ref == 'refs/heads/master' }}

  php_sylius_74_blackfire:
    name: "Sylius - Blackfire"
    runs-on: ubuntu-latest
    needs: php_symfony_74_blackfire

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./sylius/php/7.4/blackfire/
          file: ./sylius/php/7.4/blackfire/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/sylius-php:7.4-blackfire
          push: ${{ github.ref == 'refs/heads/master' }}

  php_sylius_74_xdebug:
    name: "Sylius - Xdebug"
    runs-on: ubuntu-latest
    needs: php_symfony_74_xdebug

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./sylius/php/7.4/xdebug/
          file: ./sylius/php/7.4/xdebug/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/sylius-php:7.4-xdebug
          push: ${{ github.ref == 'refs/heads/master' }}

  php_symfony_74:
    name: "Symfony - Default"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./symfony/php/7.4/
          file: ./symfony/php/7.4/Dockerfile
          tags: ajardin/symfony-php:7.4
          push: ${{ github.ref == 'refs/heads/master' }}

  php_symfony_74_blackfire:
    name: "Symfony - Blackfire"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./symfony/php/7.4/blackfire/
          file: ./symfony/php/7.4/blackfire/Dockerfile
          build-args: |
            BLACKFIRE_PROBE_VERSION=${{ env.BLACKFIRE_PROBE_VERSION }}
          tags: ajardin/symfony-php:7.4-blackfire
          push: ${{ github.ref == 'refs/heads/master' }}

  php_symfony_74_xdebug:
    name: "Symfony - Xdebug"
    runs-on: ubuntu-latest

    steps:
      - name: "Prepare the build context"
        uses: actions/checkout@v2

      - name: "Set-up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Log-in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build & Publish the Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ./symfony/php/7.4/xdebug/
          file: ./symfony/php/7.4/xdebug/Dockerfile
          tags: ajardin/symfony-php:7.4-xdebug
          push: ${{ github.ref == 'refs/heads/master' }}
